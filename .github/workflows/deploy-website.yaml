name: Deploy website and infra

on:
  push:
    branches:
      - main
      - stage

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_VAR_REGION: ${{ secrets.TF_VAR_REGION }}
  TF_VAR_BUCKET_NAME: ${{ secrets.TF_VAR_BUCKET_NAME }}
  TF_VAR_DYNAMODB_TABLE: ${{ secrets.TF_VAR_DYNAMODB_TABLE }}
  TF_VAR_BUCKET_KEY: ${{ secrets.TF_VAR_BUCKET_KEY }}

jobs:
  terraform:
    name: Deploy infrastructure
    runs-on: ubuntu-latest

    needs: website
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false

      - name: Terraform format
        run: terraform fmt

      - name: Terraform init
        id: init
        run: terraform init -backend-config="bucket=$TF_VAR_BUCKET_NAME" -backend-config="dynamodb_table=$TF_VAR_DYNAMODB_TABLE" -backend-config="region=$TF_VAR_REGION"
        working-directory: ./terraform

      - name: Terraform validate
        run: terraform validate

      - name: Terraform plan
        id: plan
        run: terraform plan -out PLAN
        working-directory: ./terraform

      - name: Terraform apply
        id: apply
        run: terraform apply -auto-approve
        if: steps.plan.outcome == 'success'
        working-directory: ./terraform

  website:
    name: Deploy application
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: vdewilde/web-app:latest
